{"version":3,"sources":["Components/Footer/Footerbase/Footerbase.module.css","Components/Header/Header.module.css","Components/Body/Body.module.css","Components/Header/menubar/Menubar.js","Components/Header/Header.js","Components/Footer/Footerbase/Footerbase.js","Components/Footer/footer.js","Components/Body/Body.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Menubase","props","Fragment","className","id","href","Header","styles","header","Footerbase","footer","Row","Col","boxed","icon","faMap","size","iconCenterCommon","faFacebook","iconRight","faTwitter","iconCenter","faInstagram","iconLeft","Body","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa63a565.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footerbase_footer__3u0Ba\",\"iconLeft\":\"Footerbase_iconLeft__3shwE\",\"iconRight\":\"Footerbase_iconRight__SheTN\",\"iconCenter\":\"Footerbase_iconCenter__ONTB9\",\"iconCenterCommon\":\"Footerbase_iconCenterCommon__3Rbig\",\"textCenter\":\"Footerbase_textCenter__ade7b\",\"boxed\":\"Footerbase_boxed__H3JMp\",\"row\":\"Footerbase_row__16SaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CGKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxed\":\"Body_boxed__2vxgt\"};","import React from \"react\";\nimport \"./Menubar.css\";\nimport \"../../../CSS/bootstrap.min.css\";\n\n\n\nfunction Menubase(props) {\n  return (\n    <React.Fragment>\n      <nav\n        className=\"navbar navbar-expand-lg navbar-light\"\n        id=\"mainNav\"\n      >\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#page-top\">\n            Event Staff\n        </a>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"#about\">\n                About\n            </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"#projects\">\n                Projects\n            </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link js-scroll-trigger\" href=\"#signup\">\n                Contact\n            </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n}\n\nexport default Menubase","import React from 'react';\nimport styles from \"./Header.module.css\";\n\nimport Menubase from './menubar/Menubar';\n\nfunction Header() {\n  return (\n    <div className={styles.header}>\n      <Menubase/>\n    </div>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport styles from \"./Footerbase.module.css\";\nimport \"../../../CSS/bootstrap.min.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFacebook, faTwitter, faInstagram } from '@fortawesome/free-brands-svg-icons'\nimport { faMap } from '@fortawesome/free-solid-svg-icons'\n\nimport { Row, Col } from 'reactstrap';\n\nfunction Footerbase(props) {\n  return (\n    <React.Fragment>\n      <div className={styles.footer}>\n        <container>\n          <Row>\n            <Col className={styles.boxed}>\n              <Row><FontAwesomeIcon icon={faMap} size=\".3x\" className={styles.iconCenterCommon} /></Row>\n              <Row><div className={styles.iconCenterCommon}>72 Patrician Villas Blackrock</div></Row>\n            </Col>\n            <Col className={styles.boxed}>\n              <Row><FontAwesomeIcon icon={faMap} size=\".3x\" className={styles.iconCenterCommon} /></Row>\n              <Row><div className={styles.iconCenterCommon}>72 Patrician Villas Blackrock</div></Row>\n            </Col>\n            <Col className={styles.boxed}>\n              <Row><FontAwesomeIcon icon={faMap} size=\".3x\" className={styles.iconCenterCommon} /></Row>\n              <Row><div className={styles.iconCenterCommon}>72 Patrician Villas Blackrock</div></Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col />\n            <Col />\n            <Col>\n              <FontAwesomeIcon icon={faFacebook} size=\"2x\" className={styles.iconRight} />\n            </Col>\n            <Col>\n              <FontAwesomeIcon icon={faTwitter} size=\"2x\" className={styles.iconCenter} />\n            </Col>\n            <Col>\n              <FontAwesomeIcon icon={faInstagram} size=\"2x\" className={styles.iconLeft} />\n            </Col>\n            <Col />\n            <Col />\n          </Row>\n        </container>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Footerbase","import React from 'react';\n\nimport Footerbase from './Footerbase/Footerbase';\n\nfunction Header() {\n  return (\n    <div className=\"Footer\">\n      <Footerbase/>\n    </div>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport \"../../CSS/bootstrap.min.css\";\nimport styles from \"./Body.module.css\";\n\n\n \nfunction Body(props) {\n  return (\n    <div className={styles.boxed}/>\n    );\n}\n\nexport default Body","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Footer from './Components/Footer/footer';\nimport Body from './Components/Body/Body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n      <Header/>\n      </div>\n      <div>\n      <Body/>\n      </div>\n      <div className=\"footer\">\n      <Footer/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}